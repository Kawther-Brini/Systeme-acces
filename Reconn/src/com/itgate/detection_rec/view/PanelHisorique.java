
package com.itgate.detection_rec.view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.LayoutManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.UIManager;

import org.jdesktop.swingx.JXDatePicker;

/**
 *
 * @author TOSHIBA
 */
public class PanelHisorique extends javax.swing.JPanel {

    private ImagePanel panel;

    //private final view.ImagePanel panel;

    /**
     * Creates new form PanelHisorique
     *
     * @param panel
     */
    public PanelHisorique() {
        initComponents();
        btnSuivant.setHorizontalTextPosition(SwingConstants.LEFT);

        validate();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        datePicker = new JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        heureD = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        heureF = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnFindHistorique = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnPrecedent = new javax.swing.JButton();
        btnSuivant = new javax.swing.JButton();
        rootPanel = new javax.swing.JPanel();
        jScrollBar1 = new javax.swing.JScrollBar();
        paneltest = new javax.swing.JPanel();

        setAlignmentX(0.0F);
        setAlignmentY(0.0F);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Date & Heure"));

        datePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Calander-icon.png"))); // NOI18N
        jLabel1.setText("Date");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Time-icon.png"))); // NOI18N
        jLabel2.setText("De:");

        heureD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "00" }));

        jLabel3.setText("Jusqu'à :");

        heureF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "00" }));

        jLabel4.setText("H");

        jLabel5.setText("H");

        btnFindHistorique.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/rechercher.png"))); // NOI18N
        btnFindHistorique.setLabel("Rechercher");
        btnFindHistorique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindHistoriqueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(heureD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(heureF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(61, 61, 61)
                .addComponent(btnFindHistorique)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(heureD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(heureF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(btnFindHistorique)))
        );

        btnPrecedent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Fleche-gauche-vert-icon.png"))); // NOI18N
        btnPrecedent.setText("Précedent");
        btnPrecedent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrecedentActionPerformed(evt);
            }
        });

        btnSuivant.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Fleche-droite-vert-icon.png"))); // NOI18N
        btnSuivant.setText("Suivant");
        btnSuivant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuivantActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPrecedent, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSuivant, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrecedent)
                    .addComponent(btnSuivant))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rootPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout rootPanelLayout = new javax.swing.GroupLayout(rootPanel);
        rootPanel.setLayout(rootPanelLayout);
        rootPanelLayout.setHorizontalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rootPanelLayout.createSequentialGroup()
                .addGap(0, 127, Short.MAX_VALUE)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        rootPanelLayout.setVerticalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
        );

        paneltest.setBackground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout paneltestLayout = new javax.swing.GroupLayout(paneltest);
        paneltest.setLayout(paneltestLayout);
        paneltestLayout.setHorizontalGroup(
            paneltestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );
        paneltestLayout.setVerticalGroup(
            paneltestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(rootPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(paneltest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(paneltest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rootPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(262, 262, 262))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSuivantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuivantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSuivantActionPerformed

    private void btnPrecedentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrecedentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrecedentActionPerformed

    private void datePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datePickerActionPerformed
    
    static ImagePanel [] imagePanels;
    static int imageCounter = 0;
    //static Tred [] treds = new Tred[3];
    //static String [] threadNames = {"Thread_Martin", "Thread_Dan", "Thread_Tomas"};//, "Thread_Jirka", "Thread_Roman"};
    static Image image;
    //static Image[][] IMAGES = new Image[3][2];
    
    private void btnFindHistoriqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindHistoriqueActionPerformed
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch(Exception e) {
            System.out.println("Error setting native LAF: " + e);
        }
        
         JScrollPane scrollPanel = new JScrollPane(rootPanel);
paneltest.add(scrollPanel, BorderLayout.CENTER);
            
        //frame.setResizable(false);
        
        //RootPanel
        JPanel rootPanel = new JPanel();
       
        rootPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout rootPanelLayout = new javax.swing.GroupLayout(rootPanel);
        LayoutManager rootLayout = null;
        JPanel galleryPanel = new JPanel();
        GridLayout galleryLayout = new GridLayout(0, 1);
        galleryPanel.setLayout(galleryLayout);
     
        Image emptyImage = new ImageIcon("D:\\img_etudiant\\image\\img_empty.jpg").getImage();
        
         
        rootPanel.setLayout(rootLayout);
           galleryPanel.setLayout(galleryLayout);
     
        
        //GalleryPanel
        

        galleryPanel.setLayout(galleryLayout);
        
       //BorderLayout rootPanelLayout = new BorderLayout();
        rootPanel.setLayout(rootPanelLayout);
        
     //  galleryLayout.setHorizontalGroup(
    //        galleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    //        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, galleryLayout.createSequentialGroup()
    //            .addGap(0, 429, Short.MAX_VALUE)
    //            .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    //    );
    //    galleryLayout.setVerticalGroup(
    //       galleryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    //        .addComponent(jScrollBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
    //    );
        
        ArrayList<String> s = null;
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        String folder = dateFormat.format(datePicker.getDate());
        
        File directory = new File("D:\\img_etudiant\\image\\"+folder);
        String d ="D:\\img_etudiant\\image\\"+folder;
        //int h =heureD.getSelectedIndex();
        String hDebut = heureD.getSelectedItem().toString();
        String hFin = heureF.getSelectedItem().toString();
        
        try { 
            s = getAllImages(directory, false);
        } catch (IOException ex) {
            JOptionPane.showConfirmDialog(null, "Pas d'image avec la date selectionné", "Erreur", JOptionPane.OK_OPTION);
             
        }
        
        if(s.size()>0){
            // ImagePanels
        imagePanels = new ImagePanel[s.size()];
        rootPanel.add(galleryPanel);
        image = new ImageIcon("D:\\img_etudiant\\image\\img_empty.jpg").getImage();
        //System.out.println(" "+imagePanels.length);
        for(int j = 0; j < imagePanels.length; j++) {
            for(int min=0;min<59;min++){
                for(int sec=0;sec<59;sec++){
                    image = new ImageIcon(d + "\\" + hDebut +"-"+ min +"-"+ sec + ".jpg").getImage();
                    System.out.println(d + "\\" + hDebut +"-"+ min +"-"+ sec + ".jpg");
                    imagePanels[j] = new ImagePanel(image);
                    galleryPanel.add(imagePanels[j]);
                     galleryPanel.updateUI();
                } 
            }
           
        }
        
        // ControlPanel
        JPanel controlPanel = new JPanel();
        //final JButton moreButton = new JButton("More");
        //final JButton lessButton = new JButton("Less");
        btnSuivant.addActionListener(
            new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    if (imageCounter == 3) return;
                    btnPrecedent.setEnabled(true);
                    //treds[imageCounter] = new Tred(imagePanels[imageCounter], imageCounter);
                    //treds[imageCounter].setName(threadNames[imageCounter]);
                    //treds[imageCounter++].start();
                    
                    if (imageCounter == 3) {
                        btnSuivant.setEnabled(false);
                    }
                }
            }
        );
        controlPanel.add(btnSuivant);
        btnPrecedent.addActionListener(
            new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    if (imageCounter == 0) return;
                    btnSuivant.setEnabled(true);
                    //treds[--imageCounter].interrupt();
                    if (imageCounter == 0) {
                        btnPrecedent.setEnabled(false);
                    }
                }
            }
        );
        
        btnPrecedent.setEnabled(false);
        controlPanel.add(btnPrecedent);
        
        rootPanel.add(galleryPanel, BorderLayout.PAGE_START);
        rootPanel.add(controlPanel, BorderLayout.PAGE_END);
  rootPanel.updateUI();
        
               JScrollPane jsp = new JScrollPane(rootPanel);
  paneltest.updateUI();       //     paneltest.add(jsp);
             //rootPanel1.add(rootPanel);
           // imgPAnel.setBackground(Color.red);
            //imgPAnel.setVisible(true);
//  rootPanel.setSize(500,500);
//  rootPanel.setVisible(true);
 
        //frame.setVisible(true);
       
        
        }  
    }//GEN-LAST:event_btnFindHistoriqueActionPerformed
    
    
    public static ArrayList<String> getAllImages(File directory, boolean descendIntoSubDirectories) throws IOException {
        ArrayList<String> resultList = new ArrayList<String>(256);
        File[] f = directory.listFiles();
        for (File file : f) {
            if (file != null && file.getName().toLowerCase().endsWith(".jpg") && !file.getName().startsWith("tn_")) {
                resultList.add(file.getCanonicalPath());
            }
            if (descendIntoSubDirectories && file.isDirectory()) {
                ArrayList<String> tmp = getAllImages(file, true);
                if (tmp != null) {
                    resultList.addAll(tmp);
                }
            }
        }
        if (resultList.size() > 0)
            return resultList;
        else
            return null;
    }
    
    
class ImagePanel extends JPanel {

  private Image img;

  public ImagePanel() {
      img = null;
  }
  
  public ImagePanel(URL img) {
    this(new ImageIcon(img).getImage());
  }
 //new change
  public ImagePanel(Image img) {
    this.img = img;
    Dimension size = new Dimension(img.getWidth(null), img.getHeight(null));
    setPreferredSize(size);
    setMinimumSize(size);
    setMaximumSize(size);
    setSize(size);
    setLayout(null);
  }
  
  public void updateImage(Image img) {
    this.img = img;
    repaint();
  }

  public void updateImage(String img) {
    updateImage(new ImageIcon(img).getImage());
  }
  
    @Override
  public void paintComponent(Graphics g) {
    g.drawImage(img, 0, 0, null);
  }

}

//
//class Tred extends Thread {
//    ImagePanel panel;
//    Image [] images;
//    Image currentImage;
//    Image emptyImage;
//    
//    int a() {
//        return 1;
//    }
//    
//    public Tred(ImagePanel panel, int imgIndex) {
//        this.panel = panel;
//        //rootPanel = panel;
//        int n = Gallery.IMAGES[imgIndex].length;
//        images = new Image[n];
//        for (int i = 0; i < n; i++) {
//            images[i] = Gallery.IMAGES[imgIndex][i];
//        }
//        emptyImage = Gallery.emptyImage;
//        
//    }
//    
//    @Override
//    public void run() {
//        currentImage = images[0];
//        try {
//            while(!Thread.currentThread().isInterrupted()) {
//                Runnable updatePanel = new Runnable() {
//                    public void run() {
//                        panel.updateImage(currentImage);
//                    }
//                };
//                try {
//                    SwingUtilities.invokeAndWait(updatePanel);
//                } catch (InterruptedException ex) {
//                    Logger.getLogger(Tred.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (InvocationTargetException ex) {
//                    Logger.getLogger(Tred.class.getName()).log(Level.SEVERE, null, ex);
//                }
//                Thread.sleep(1000);
//                if(currentImage == images[0])
//                    currentImage = images[1];
//                else currentImage = images[0];
//            }
//         } catch (InterruptedException e) {}
//        
//        Runnable clearPanel = new Runnable() {
//            public void run() {
//                panel.updateImage(emptyImage);
//            }
//         };
//         try {
//            SwingUtilities.invokeAndWait(clearPanel);
//         } catch (InterruptedException ex) {
//            Logger.getLogger(Tred.class.getName()).log(Level.SEVERE, null, ex);
//         } catch (InvocationTargetException ex) {
//            Logger.getLogger(Tred.class.getName()).log(Level.SEVERE, null, ex);
//         }
//         
//    }
//}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFindHistorique;
    private javax.swing.JButton btnPrecedent;
    private javax.swing.JButton btnSuivant;
    private org.jdesktop.swingx.JXDatePicker datePicker;
    private javax.swing.JComboBox<String> heureD;
    private javax.swing.JComboBox<String> heureF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JPanel paneltest;
    public javax.swing.JPanel rootPanel;
    // End of variables declaration//GEN-END:variables

}
