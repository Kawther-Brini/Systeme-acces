/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.itgate.detection_rec.view;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import com.itgate.detection_rec.db.Connexion;

/**
 *
 * @author TOSHIBA
 */
public class PanelCompte extends javax.swing.JPanel {
        Connection cn = Connexion.getConnection();

    /**
     * Creates new form PAnelCompte
     */
    public PanelCompte() {
        initComponents();

       DefaultTableModel dtm = (DefaultTableModel) jTableCompte.getModel();
        TableColumn col = jTableCompte.getColumnModel().getColumn(0);
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalAlignment(SwingConstants.LEFT);
        col.setCellRenderer(dtcr);
        int count = 0;
        ResultSet rs;
        dtm.setRowCount(0);
         
        String req = "SELECT * FROM etudiant; ";
        
        try {
                rs = cn.createStatement().executeQuery(req);
                ResultSetMetaData meta = rs.getMetaData();
                int numberOfColumns = meta.getColumnCount();

                //if (!rs.next()) {
                //   JOptionPane.showMessageDialog(null, "Aucun élément trouver.", "Information", JOptionPane.DEFAULT_OPTION);
                //}
                while (rs.next()) {
                    ++count;
                    Object[] rowData = new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                        rowData[i] = rs.getObject(i + 1);
                    }
                    dtm.addRow(rowData);
                }

                jTableCompte.setModel(dtm);
                dtm.fireTableDataChanged();
                if (count == 0) {
                    JOptionPane.showMessageDialog(null, "Aucun élément trouver.", "Information", JOptionPane.DEFAULT_OPTION);

                }
            } catch (SQLException ex) {
                Logger.getLogger(PanelCompte.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnAjouter = new javax.swing.JButton();
        btnModif = new javax.swing.JButton();
        btnSupprimer = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        btnRechercher = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCompte = new javax.swing.JTable();
        lblInfo = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setToolTipText("");

        jToolBar1.setBackground(new java.awt.Color(153, 153, 153));
        jToolBar1.setRollover(true);

        btnAjouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Plus.png"))); // NOI18N
        btnAjouter.setText("Ajouter");
        btnAjouter.setFocusable(false);
        btnAjouter.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAjouter.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAjouter);

        btnModif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit_1.png"))); // NOI18N
        btnModif.setText("Modifier");
        btnModif.setEnabled(false);
        btnModif.setFocusable(false);
        btnModif.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModif.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifActionPerformed(evt);
            }
        });
        jToolBar1.add(btnModif);

        btnSupprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/X.png"))); // NOI18N
        btnSupprimer.setText("supprimer");
        btnSupprimer.setEnabled(false);
        btnSupprimer.setFocusable(false);
        btnSupprimer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSupprimer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSupprimer);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Rechercher"));

        jLabel1.setText("Code:");

        btnRechercher.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/rechercher.png"))); // NOI18N
        btnRechercher.setText("Rechercher");
        btnRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechercherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRechercher)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(btnRechercher)))
                    .addComponent(txtCode))
                .addContainerGap())
        );

        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jTableCompte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nom", "Prénom", "Date naissance", "Code", "Email", "Tel"
            }
        ));
        jTableCompte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCompteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCompte);

        jPanel3.add(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1267, 1267, 1267)
                        .addComponent(lblInfo))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(lblInfo)
                .addGap(691, 691, 691))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechercherActionPerformed
     Connection cn = Connexion.getConnection();

       btnModif.setEnabled(false);
        btnSupprimer.setEnabled(false);

        String code = txtCode.getText();
        
        String req;
        DefaultTableModel dtm = (DefaultTableModel) jTableCompte.getModel();
        TableColumn col = jTableCompte.getColumnModel().getColumn(0);
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalAlignment(SwingConstants.LEFT);
        col.setCellRenderer(dtcr);
        int count = 0;
        ResultSet rs;
        dtm.setRowCount(0);
        //jTable1.removeAll();

        if (code.compareTo("") != 0) {
            req = "SELECT * FROM `etudiant` WHERE code='" + code + "';";

            try {
                rs = cn.createStatement().executeQuery(req);
                ResultSetMetaData meta = rs.getMetaData();
                int numberOfColumns = meta.getColumnCount();

                //if (!rs.next()) {
                //   JOptionPane.showMessageDialog(null, "Aucun élément trouver.", "Information", JOptionPane.DEFAULT_OPTION);
                //}
                while (rs.next()) {
                    ++count;
                    Object[] rowData = new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                        rowData[i] = rs.getObject(i + 1);
                    }
                    dtm.addRow(rowData);
                }

                jTableCompte.setModel(dtm);
                dtm.fireTableDataChanged();
                if (count == 0) {
                    JOptionPane.showMessageDialog(null, "Aucun élément trouver.", "Information", JOptionPane.DEFAULT_OPTION);

                }
            } catch (SQLException ex) {
                Logger.getLogger(PanelCompte.class.getName()).log(Level.SEVERE, null, ex);
            }

        

        } else {
            req = "SELECT * FROM etudiant;";
            try {
                rs = cn.createStatement().executeQuery(req);
                ResultSetMetaData meta = rs.getMetaData();
                int numberOfColumns = meta.getColumnCount();

                while (rs.next()) {

                    Object[] rowData = new Object[numberOfColumns];
                    for (int i = 0; i < rowData.length; ++i) {
                        rowData[i] = rs.getObject(i + 1);
                    }
                    dtm.addRow(rowData);
                }
                jTableCompte.setModel(dtm);
                dtm.fireTableDataChanged();
            } catch (SQLException ex) {
                Logger.getLogger(PanelCompte.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


                                                     

    }//GEN-LAST:event_btnRechercherActionPerformed

    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
AjouterCompte f = new AjouterCompte();
        f.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btnAjouterActionPerformed

    private void btnModifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifActionPerformed
        int ligneSelectionne = jTableCompte.getSelectedRow();

        //
int id = (int) jTableCompte.getValueAt(ligneSelectionne, 0);
String nom = (String) jTableCompte.getValueAt(ligneSelectionne, 1);
String prenom = (String) jTableCompte.getValueAt(ligneSelectionne, 2);
String datenaissance = (String) jTableCompte.getValueAt(ligneSelectionne, 3);
String code = (String) jTableCompte.getValueAt(ligneSelectionne, 4);
String email = (String) jTableCompte.getValueAt(ligneSelectionne, 5);
String gsm =  (String) jTableCompte.getValueAt(ligneSelectionne, 6);

ModifierCompte m = new ModifierCompte();
m.txtID.setText(""+id);
    m.txtCode.setText(code);
    
    
DateFormat format = new SimpleDateFormat("dd/MM/yyyy", Locale.FRANCE);
Date date = null;
            try {
                date = format.parse(datenaissance);
            } catch (ParseException ex) {
                Logger.getLogger(PanelCompte.class.getName()).log(Level.SEVERE, null, ex);
            }
    
    m.txtDatePickerNaissance.setDate(date);
    m.txtEmail.setText(email);
    m.txtGSM.setText(gsm);
    m.txtNom.setText(nom);
    m.txtPrenom.setText(prenom);
m.setVisible(true);
    
    }//GEN-LAST:event_btnModifActionPerformed

    private void btnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerActionPerformed
        // TODO add your handling code here:
         int r = JOptionPane.showConfirmDialog(null, "voulez vous supprimer le client.", "Confirmation", JOptionPane.OK_CANCEL_OPTION);
        //System.out.println(" " + r);
        if (r == 0) {
            int ligneSelectionne = jTableCompte.getSelectedRow();

            int id = (int) jTableCompte.getValueAt(ligneSelectionne, 0);

            String req = "DELETE FROM etudiant WHERE id=" + id;
            try {
                int nb = cn.createStatement().executeUpdate(req);
                JOptionPane.showMessageDialog(null, "Etudiant supprimer avec succes.", "Information", JOptionPane.DEFAULT_OPTION);
                DefaultTableModel dtm = (DefaultTableModel) jTableCompte.getModel();
                dtm.fireTableDataChanged();
                dtm.removeRow(ligneSelectionne);
                btnModif.setEnabled(false);
                btnSupprimer.setEnabled(false);
            } catch (SQLException ex) {
                Logger.getLogger(PanelCompte.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSupprimerActionPerformed

    private void jTableCompteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCompteMouseClicked
        // TODO add your handling code here:
        
        int ligneSelectionne = jTableCompte.getSelectedRow();

        //int codeC = (int) jTableCompte.getValueAt(ligneSelectionne, 0);
        //String nomC = (String) jTableCompte.getValueAt(ligneSelectionne, 1);
        //String lieuC = (String) jTableCompte.getValueAt(ligneSelectionne, 2);
        //String matriculeC = (String) jTableCompte.getValueAt(ligneSelectionne, 3);
        //String telC = (String) jTableCompte.getValueAt(ligneSelectionne, 4);
        //String faxC = (String) jTableCompte.getValueAt(ligneSelectionne, 5);
        //String gsmC = (String) jTableCompte.getValueAt(ligneSelectionne, 6);
 

        btnModif.setEnabled(true);
        btnSupprimer.setEnabled(true);

    }//GEN-LAST:event_jTableCompteMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnModif;
    private javax.swing.JButton btnRechercher;
    private javax.swing.JButton btnSupprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTableCompte;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JTextField txtCode;
    // End of variables declaration//GEN-END:variables
}
